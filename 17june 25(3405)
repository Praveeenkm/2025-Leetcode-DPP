#python 

MOD = 10**9 + 7

class Solution:
    def countGoodArrays(self, n: int, m: int, k: int) -> int:
        fact = [1] * (n)
        inv = [1] * (n)

        # Precompute factorials and modular inverses
        for i in range(1, n):
            fact[i] = fact[i - 1] * i % MOD
        inv[n - 1] = pow(fact[n - 1], MOD - 2, MOD)
        for i in range(n - 2, -1, -1):
            inv[i] = inv[i + 1] * (i + 1) % MOD

        def comb(a, b):
            if b < 0 or b > a:
                return 0
            return fact[a] * inv[b] % MOD * inv[a - b] % MOD

        res = m * comb(n - 1, k) % MOD
        res = res * pow(m - 1, n - 1 - k, MOD) % MOD
        return res
