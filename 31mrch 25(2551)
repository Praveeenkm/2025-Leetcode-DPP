from heapq import nlargest, nsmallest

class Solution:
    def putMarbles(self, weights, k):
        n = len(weights)
        if k == 1:
            return 0
        
        # Calculate pairwise sums of adjacent elements
        pair_sums = [weights[i] + weights[i + 1] for i in range(n - 1)]
        
        # Find the k-1 largest and k-1 smallest sums
        max_sum = sum(nlargest(k - 1, pair_sums))
        min_sum = sum(nsmallest(k - 1, pair_sums))
        
        return max_sum - min_sum

# Example test cases
solution = Solution()
print(solution.putMarbles([1, 3, 5, 1], 2))  # Output: 4
print(solution.putMarbles([1, 3], 2))        # Output: 0
